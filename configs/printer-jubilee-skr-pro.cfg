# This file contains common pin mappings for the BigTreeTech SKR PRO.
# To use this config, the firmware should be compiled for the
# STM32F407 with a "32KiB bootloader".

# The "make flash" command does not work on the SKR PRO. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR PRO
# with that SD card.

# See the example.cfg file for a description of available parameters.


[stepper_x]
step_pin: PE9
dir_pin: !PF1
enable_pin: !PF2
step_distance: .005
endstop_pin: PB10
position_endstop: -11.5
position_max: 311.5
position_min: -11.5
homing_speed: 50

[stepper_y]
step_pin: PE11
dir_pin: !PE8
enable_pin: !PD7
step_distance: .005
endstop_pin: PE12
position_endstop: -44.0
position_max: 345
position_min: -44.0
homing_speed: 50

[manual_stepper tool_lock]
step_pin: PE13
dir_pin: PC2
enable_pin: !PC0
step_distance: .005
endstop_pin: PG8

[probe]
pin: B2:PB10
z_offset=0

[safe_z_home]
home_xy_position: 150,10
speed: 50
z_hop: 15
z_hop_speed: 5

[bed_mesh]
mesh_min: 10,10
mesh_max: 290,290
probe_count: 4,4

[z_tilt]
z_positions:
	150,10
	290,290
	10,290
points:
	150,10
	290,290
	10,290

[stepper_z]
step_pin: B2:PE9
dir_pin: B2:PF1
enable_pin: !B2:PF2
step_distance: 0.0003125
endstop_pin: probe:z_virtual_endstop
position_max: 330
position_min: -5
homing_speed: 50

[stepper_z1]
step_pin: B2:PE11
dir_pin: B2:PE8
enable_pin: !B2:PD7
step_distance: 0.0003125

[stepper_z2]
step_pin: B2:PE13
dir_pin: B2:PC2
enable_pin: !B2:PC0
step_distance: 0.0003125

[extruder]
step_pin: B2:PE14
dir_pin: !B2:PA0
enable_pin: !B2:PC3
heater_pin: B2:PB1 # Heat0
sensor_pin:  B2:PF4 # T1 Header
step_distance: .00225
nozzle_diameter: 0.400
filament_diameter: 1.750
sensor_type: EPCOS 100K B57560G104F
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 290

#[extruder1]
#step_pin: B2:PD15
#dir_pin: B2:PE7
#enable_pin: !B2:PA3
#heater_pin: B2:PD14 # Heat1
#sensor_pin: B2:PF5 # T2
#sensor_type: PT100 INA826
#step_distance: .002
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
#min_temp: 0
#max_temp: 290

[thermistor NTCALUG01A103F]
temperature1: 25.
resistance1: 10000.
beta: 3984

#[extruder2]
#step_pin: PD13
#dir_pin: PG9
#enable_pin: !B2:PF0
#heater_pin: B2:PB0 # Heat2
#sensor_pin: B2:PF6 # T3
#sensor_type: EPCOS 100K B57560G104F
#step_distance: .002
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
#min_temp: 0
#max_temp: 250

[extruder1]
step_pin: PE14
dir_pin: !PA0
enable_pin: !PC3
heater_pin: PB1 # Heat0
sensor_pin:  PF4 # T1 Header
sensor_type: EPCOS 100K B57560G104F
step_distance: .00225
nozzle_diameter: 0.400
filament_diameter: 1.750
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 290

#[extruder4]
#step_pin: PD15
#dir_pin: !PE7
#enable_pin: !PA3
#heater_pin: PD14 # Heat1
#sensor_pin: PF5 # T2
#sensor_type: EPCOS 100K B57560G104F
#step_distance: .00225
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
#min_temp: 0
#max_temp: 290

#[extruder5]
#step_pin: PD13
#dir_pin: PG9
#enable_pin: !PF0
#heater_pin: PB0 # Heat2
#sensor_pin: PF6 # T3
#sensor_type: EPCOS 100K B57560G104F
#step_distance: .002
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
#min_temp: 0
#max_temp: 250

[heater_bed]
heater_pin: B2:PD12
sensor_pin: B2:PF3 # T0
sensor_type: NTC 100K MGB18-104F39050L32
#control: pid
#pid_Kp: 62.491
#pid_Ki: 1.009
#pid_Kd: 967.831
min_temp: 0
max_temp: 130

[heater_fan fan1]
pin: B2:PC8
heater: extruder

[heater_fan fan2]
pin: PC8
heater: extruder1

[fan]
pin: B2:PE5

#Since klipper currently doesn't have proper support for M106/M107
#we need to add a PWM output and write some gcode macros to fix it
[output_pin tool2_fan]
pin: PE5
pwm:true

#[heater_fan fan2]
#pin: B2:PE6

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_53003A0003504D4E48333620-if00

[mcu B2]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_1D00490003504D4E48333620-if00

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 1000
max_z_velocity: 5
max_z_accel: 100

########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PC13
microsteps: 16
run_current: 1.13
hold_current: 0.500
stealthchop_threshold: 100

[tmc2209 stepper_y]
uart_pin: PE3
microsteps: 16
run_current: 1.13
hold_current: 0.500
stealthchop_threshold: 100

[tmc2209 stepper_z]
uart_pin: B2:PC13
microsteps: 16
run_current: 0.650
hold_current: 0.450
stealthchop_threshold: 30

[tmc2209 stepper_z1]
uart_pin: B2:PE3
microsteps: 16
run_current: 0.650
hold_current: 0.450
stealthchop_threshold: 30

[tmc2209 stepper_z2]
uart_pin: B2:PE1
microsteps: 16
run_current: 0.650
hold_current: 0.450
stealthchop_threshold: 30

[tmc2209 manual_stepper tool_lock]
uart_pin: PE1
microsteps: 16
run_current: 1.00
hold_current: 0.60
stealthchop_threshold: 30

[tmc2209 extruder]
uart_pin: B2:PD4
microsteps: 16
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 5

#[tmc2209 extruder1]
#uart_pin: B2:PD1
#microsteps: 16
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 5

#[tmc2209 extruder2]
#uart_pin: B2:PD6
#microsteps: 16
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 5

[tmc2209 extruder1]
uart_pin: PD4
microsteps: 16
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 5

#[tmc2209 extruder4]
#uart_pin: PD1
#microsteps: 16
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 5

#[tmc2209 extruder5]
#uart_pin: PD6
#microsteps: 16
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 5


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PG4, EXP1_3=PD11, EXP1_5=PG2, EXP1_7=PG6, EXP1_9=<GND>,
    EXP1_2=PA8, EXP1_4=PD10, EXP1_6=PG3, EXP1_8=PG7, EXP1_10=<5V>,
    
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PG10, EXP2_5=PF11, EXP2_7=PF12,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PB12, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=PF13
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "spi2"
    
    # EXP3 header
    EXP3_1=B2:PG4, EXP3_3=B2:PD11, EXP3_5=B2:PG2, EXP3_7=B2:PG6, EXP3_9=B2:<GND>,
    EXP3_2=B2:PA8, EXP3_4=B2:PD10, EXP3_6=B2:PG3, EXP3_8=B2:PG7, EXP3_10=B2:<5V>,
    
    # EXP4 header
    EXP4_1=B2:PB24, EXP4_3=B2:PG10, EXP4_5=B2:PF11, EXP4_7=B2:PF12,  EXP4_9=B2:<GND>,
    EXP4_2=B2:PB23, EXP4_4=B2:PB22, EXP4_6=B2:PB25, EXP4_8=B2:<RST>, EXP4_10=B2:PF13
    # Pins EXP4_1, EXP4_6, EXP4_2 are also MISO, MOSI, SCK of bus "spi2"
# See the sample-lcd.cfg file for definitions of common LCD displays.

[include fans.cfg]
[include toollock.cfg]
[include tooldock.cfg]

[gcode_macro INIT]
gcode:
    {% if not printer["gcode_macro DOCK_INIT"].tool_present %}
        g28
        Z_TILT_ADJUST
        g1 X10 Y10 F3000
        LOCK_INIT
		DOCK_INIT
    {% else %}
        { printer.gcode.action_respond_info("You cannot run INIT with a tool in place, please run TOOL_UNLOCK and manually place the tool in its dock.") }
    {% endif %}

[gcode_macro DUMP_VARS]
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { printer.gcode.action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% endfor %}
   {% endfor %}

[gcode_macro T0]
gcode:
	TOOL_PICKUP ZONE_X=5 ZONE_Y=260 PARK_X=5 PARK_Y=341 OFFSET_X=4.5 OFFSET_Y=-44.02 OFFSET_Z=2.65
	ACTIVATE_EXTRUDER EXTRUDER=extruder

[gcode_macro T1]
gcode:
	TOOL_PICKUP ZONE_X=105 ZONE_Y=260 PARK_X=105 PARK_Y=341 OFFSET_X=4.5 OFFSET_Y=-44.67 OFFSET_Z=2.87
	ACTIVATE_EXTRUDER EXTRUDER=extruder1

[gcode_macro G28]
rename_existing:    G28.1
gcode:
    {%set p=[] %}    
    {% for key in params %}
        {% if key != 'G' %}
            {% set p = p.append(key + params[key])  %}
        {% endif %}
    {% endfor %}
	{% if not printer["gcode_macro DOCK_INIT"].tool_present%}
		G28.1 { p|join(" ") }
	{% else %}
	{ printer.gcode.action_respond_info("You attemped to home while a tool is present") }
	{% endif %}

[idle_timeout]
gcode:
	{ printer.gcode.action_respond_info( "Idle Timeout Reached!") }
	TURN_OFF_HEATERS
    M107 P0
    M107 P1
    {% if 'xyz' in printer.toolhead.homed_axes %}
        #Drop the Z 5mm relative
        G91;
        G1 Z5;
        #Set use back to absolute mode.
        G90;
        {% if printer["gcode_macro DOCK_INIT"].tool_present %}
                #If we have a tool, drop it off
                TOOL_DROPOFF
        {% elif printer["gcode_macro LOCK_INIT"].lock_state %}
                #If we don't have a tool but the lock is engaged, unlock it.
                TOOL_UNLOCK
        {% endif %}
    {% endif %}
	M84
timeout: 600


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 62.491
#*# pid_ki = 1.009
#*# pid_kd = 967.831
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.136881, -0.035006, 0.012182, -0.001881
#*# 	  -0.080943, 0.009369, 0.063119, 0.035932
#*# 	  -0.009068, 0.060619, 0.072807, 0.033432
#*# 	  0.003119, 0.032494, 0.022807, -0.004693
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0000000001
#*# max_x = 289.990000001
#*# min_y = 10.0
#*# max_y = 289.990000001
